1
var input = "javascript is awesome";
var output = "";
for (var i = 0;i< input.length;i++){if(input[i]==="a") {output+="4"}
else if(input[i]==="e") {output+="3"}
else if(input[i]==="i") {output+="1"}
else if(input[i]==="o") {output+="0"}
else{output += input[i]}}
console.log(output);

2
function greet(name){
  return ("Hello, " + name + " how are you doing today?");
}

3
function boolToWord( bool ){
if (bool) {
  return "Yes";
    }
  return "No";
}

4
function correctTail(body, tail){

  sub = body.substr(body.length-tail.length)

  if (sub === tail)  return true;

  else return false;
  }
  
  5
  Повторить строку несколько раз
  
  function repeatStr (n, s) {
  return s.repeat(n);
}

6
Перевод положительных чисел в отрицательные
function makeNegative(num) {
  return -Math.abs(num);
}

7
String.prototype.isUpperCase = function() {
  return String(this) === this.toUpperCase();
}

8
Убрать пробелы из строки
function noSpace(x) {
    let newStr = ''
    for(let i = 0; i < x.length; i++) {
        if(x[i] !== " "){
            newStr += x[i]
        }
    }
    return newStr
}

9
Перевести строку в верхний регистр
function makeUpperCase(str) {
  return str.toUpperCase ();
}

10
Четные/нечетные
function simpleMultiplication(number) {
     var num = number;
     if(Math.floor(num / 2) == num / 2) {
         //Чётное
         return number * 8;
     }else{
         //Нечётное
         return number * 9;
     }
}

11
function greet () {
  return ("hello world!")
}
greet()

12
function booleanToString(b){
 if(b){
        return "true";
    }else {
        return "false";
    }
}

13
Только числа
function validatePIN(pin) {
  const aPin = pin.replace(/\D/g, '');
  
  return aPin === pin && (pin.length === 4 || pin.length === 6);
}

14
function lovefunc(flower1, flower2){
    return flower1 % 2 !== flower2 % 2;
}

15
function isTriangle(a,b,c)
{
if ((a + b <= c) || (a + c <= b) || (b + c <= a)) {
    return false;
  } 
  else {
    if ((a <= 0) || (b <= 0) || (c <= 0)) {
    return false;
    } 
    else {
    return true;
    } 
  } 
}

16
function positiveSum(arr) {
 var sum = 0;
 for(var i = 0; i < arr.length; i++) {
   if(arr[i] > 0) {
    sum += arr[i];
  }
 }
return sum;
}

17
Функция выполняет 4 мат.операции
function basicOp(operation, value1, value2) {
let answer = "";
  switch (operation) {
  case "+":
  return value1 + value2;
  case "-":
  return value1 - value2;
  case "*":
  return value1 * value2;
  case "/":
  return value1 / value2;
  return answer;
      }
}

18
Строка в обратном порядке
function solution(str){
  const reverseStr = str.split('').reverse('').join('');
  return reverseStr;
}

19
Преобразование суммы в двоичный код
function addBinary(a,b) {
  return (a+b).toString(2)
}

20
Время в миллисекундах
function past(h, m, s){
  const convertHours = h * 60 * 60 * 1000;
const convertMinutes = m * 60 * 1000;
const convertSeconds = s * 1000;
return convertHours + convertMinutes + convertSeconds;
}

21
Среднее арифметическое и сравнение
function betterThanAverage(classPoints, yourPoints) {
  return classPoints.reduce((a, b) => a + b) / classPoints.length < yourPoints;

}

22
Умножение всех чисел в массиве
function grow(x){
let result = 1;
      for(var i = 0; i<x.length; i++){
        result *= x[i];
      }
      return result;
}

23
Числа в обратном порядке
function digitize(n) {
    return String(n).split('').map(Number).reverse();
}

24
function getMiddle(s) {
  const newArr = s.split(""); 
  let middle;
    if(newArr.length % 2 === 0){
      middle = newArr[(newArr.length / 2)- 1]  + newArr[(newArr.length / 2)];
    } else {
        middle = newArr[Math.floor(newArr.length / 2)];
    }
  return middle;
}

25
Удаление первого и последнего элемента в строке/массиве
function removeChar(str){
return str.slice(1, -1);
};

26
Преобразование строки в массив слов
function stringToArray(string){
return string.split(' ');
}

27
Возвести в квадрат числа и сложить результаты
function squareSum(numbers){
 			var sum=0;
 			for(var i=0;i<numbers.length;i++){
 				sum += Math.pow(numbers[i],2);
 			}
 			return sum;
		}
    
28
Обратные слова
function reverseWords(str) {
  return str.split(' ').map(e => e.split('').reverse().join('')).join(' ')
}

29
Подсчитать количество объектов true в масиве
function countSheeps(arrayOfSheep) {
  let sum = 0;
 			for(let i=0;i < arrayOfSheep.length; i++) {
 				if(arrayOfSheep[i]) sum += 1
 			}
 			return sum;
		}
    
30
function paperwork(n, m) {
  if (n > 0 && m > 0) {
    return n*m;
  }
  else {
    return 0;
  }
}

31
Создайте функцию, которая возвращает массив целых чисел от n до 1, где n>0.

Пример: n=5 --> [5,4,3,2,1]

const reverseSeq = n => { 
  if (n < 1) {
    return [];
  } else {
    const countArray = reverseSeq(n - 1);
    countArray.unshift(n);
    return countArray;
  }
};

32
Удалить все гласные из строки
function disemvowel(str) {
  const newStr = str.replace(/[aeiou]/gi, '');
  return newStr;
}

33
Поиск повторяющихся букв, если есть - false
function isIsogram(str){
   var i, j;
   str = str.toLowerCase();
   for(i = 0; i < str.length; ++i) {
     for(j = i + 1; j < str.length; ++j) {
       if(str[i] === str[j]) {
         return false;
       }
     }
   }
   return true;
}

34
Создайте функцию с двумя аргументами, которая будет возвращать массив первых (n) кратных (x).

Предположим, что и заданное число, и количество подсчетов будут положительными числами больше 0.

function countBy(x, n) {
  let z = [];
  for (i = 1; i <= n; ++i) {
    z.push(i * x);
  }
  return z;
}

35
function greet (name, owner) {
 if (name == owner) {
        return("Hello boss")
    }
    else {
        return("Hello guest")
    }
}

36
Совпадение элементов
function solution(str, ending){
  return str.slice(str.length - ending.length) === ending;
}

37
Проверить, есть ли элемент в массиве
function check(a,x){
  return a.includes(x);
};

38
Преобразование имени в инициалы
function abbrevName(name){
 return name.split(' ').map(i => i[0].toUpperCase()).join('.')
}


39
Проверка суммы на четное/нечетное
function oddOrEven(array) {
 let result = 1;  
  for(var i = 0; i<array.length; i++){
        result += array[i];
      }
 var num = result;    
if(Math.floor(num / 2) == num / 2) {
         //Чётное
         return "odd";
     }else{
         //Нечётное
         return "even";
     }
}

40
Четное/нечетное
function even_or_odd(number) {
     var num = number;
     if(Math.floor(num / 2) == num / 2) {
         //Чётное
         return "Even";
     }else{
         //Нечётное
         return "Odd";
     }
}

41
Написать функцию, которая возвращает сумму следующих рядов до n-го члена (параметра).
Ряд: 1 + 1/4 + 1/7 + 1/10 + 1/13 + 1/16 +...
Округлить до 2 знаков после запятой
function SeriesSum(n) {
   for (var s = 0, i = 0; i < n; i++) {
     s += 1 / (1 + i * 3)
   }
   return s.toFixed(2)
 }

42
Возвращает массив, где первый элемент — это количество положительных чисел, 
а второй элемент — сумма отрицательных чисел. 0 не является ни положительным, ни отрицательным.
function countPositivesSumNegatives(input) {
    let positiveNums = 0;
    let negativeNums = 0;
    if (input === null || input.length === 0) {
      return [];
    } else {
      input.forEach((num) => num > 0 ? positiveNums++ : negativeNums += num);
    }
    return [positiveNums , negativeNums];
}

43
Преобразование строки в число
const stringToNumber = function(str){
return parseInt(str);
}

44
Учитывая массив единиц и нулей, преобразуйте эквивалентное двоичное значение в целое число.
Например: [0, 0, 0, 1] обрабатывается как 0001, что является двоичным представлением 1.

const binaryArrayToNumber = arr => {
   return parseInt(arr.join(''), 2);
};

45
function multiply(a,b){

      return (a*b);
}

46
function doubleInteger(i) {
  return (i*2);
}

47
Убрать восклицательные знаки из строки
function removeExclamationMarks(s) {
  let newStr = ''
    for(let i = 0; i < s.length; i++) {
        if(s[i] !== "!"){
            newStr += s[i]
        }
    }
    return newStr
}

48
Вернуть имя/фамилию в обратном порядке
function nameShuffler(str){
return str.split (" ").reverse().join(" ");
  }

49
Оценки
function getGrade (s1, s2, s3) {
let sum = ((s1 + s2 +s3)/3);
  if (sum >= 90) {
    return "A"; 
  } else if (sum >= 80 && sum < 90) {
    return "B";
  }
 else if (sum >= 70 && sum < 80) {
    return "C";
  }
  else if (sum >= 60 && sum < 70) {
    return "D";
  }
  else {
    return "F";
    
  Альтернатива
  function getGrade (s1, s2, s3) {
  var score = (s1 + s2 + s3) / 3;
  if (score >= 90 && score <= 100) {
      return 'A';
  } else if (score >= 80 ) {
    return 'B';
  } else if (score >= 70 ) {
    return 'C';
  } else if (score >= 60) {
    return 'D';
  } else{
    return 'F';
  }
}
  }

50
Камень-ножницы-бумага
const rps = (p1, p2) => {
  if (p1 === p2) return "Draw!";
  var rules = {rock: "scissors", paper: "rock", scissors: "paper"};
  if (p2 === rules[p1]) {
    return "Player 1 won!";
  }
  else {
    return "Player 2 won!";
  }
};

51
function setAlarm(employed, vacation){
return employed && !vacation;
}

52
Удвоить все элементы в строке
function doubleChar(str) {
return [...str].map(s => s.repeat(2)).join('')
}

53
function twiceAsOld(dadYearsOld, sonYearsOld) {
 return Math.abs(dadYearsOld - 2*sonYearsOld);
}

54
Отрицательные в положительные/положительные в отрицательные
function invert(array) {
   if (array.length === 0) return [];
   for (let i = 0; i < array.length; i++) {
     array[i] = -array[i];
   }
   return array;
}

55
Преобразовать число в строку
function numberToString(num) {
 return String(num);
}

56
Противоположные числа
function opposite(number) {
 return number *= -1;
}

57
Из 16-ричной в 10-чную
function hexToDec(hexString){
return  parseInt(hexString, 16);
}

58
Обратный порядок
function fixTheMeerkat(arr) {
  return arr.reverse();
}

59
Преобразовать строки в числа и узнать их сумму
function sumMix(x){
let result = 0;
     for (let n of x) {
    result += parseInt(n);
  }
  return result;
  }

60
Любит/не любит
function howMuchILoveYou(nbPetals) {
    let yyy = ["I love you", "a little", "a lot", "passionately", "madly", "not at all" ];
    for (let i = 0; i <= nbPetals-1; i += 1) {
    
    if (i === nbPetals-1) {
      return yyy[i%6];
    }
}
}

61
Удвоить каждое число в массиве
function maps(x){
 return x.map(el => el * 2);
  }

62
Создайте функцию, которая проверяет, делится ли число n на два числа x И y. Все входы являются строго положительными числами.
function isDivisible(n, x, y) {
  if (n%x == 0 && n%y == 0)  {
    return true;
  }
  else {
    return false;
  }
}

63
Прайс без умножения, накопление суммы за каждый символ
function billboard(name, price = 30){
  let result = 0;
  for (let i = 0; i < name.length; i++) {
     result += price;
      }
      return result;
} 

64
Выдает массив кратных чисел
Завершите функцию, которая принимает два аргумента и возвращает все числа, которые делятся на заданный делитель. Первый аргумент — это массив чисел, а второй — делитель.
function divisibleBy(numbers, divisor){
let mas = [];
  for (let i = 0; i < numbers.length; i++) {
    if (numbers[i] % divisor === 0) {
      mas.push(numbers[i]);
    
  }
    }
    return mas;
}

65
Вам будет предоставлен список строк. Вы должны отсортировать его в алфавитном порядке (с учетом регистра и на основе значений символов ASCII), а затем вернуть первое значение.

Возвращаемое значение должно быть строкой и иметь «***» между каждой буквой.
function twoSort(s) {
  return s.sort()[0].split('').join('***')
}

66
Замена символов
function htmlspecialchars(formData) {
let arr = [];
  for (let i = 0; i < formData.length; i++){
    if (formData[i] == '<'){
      arr.push('&lt;');
      
    } else if(formData[i] == '>'){
      arr.push('&gt;');
      
    } else if(formData[i] == '"'){
      arr.push('&quot;');
      
    } else if(formData[i] == '&'){
      arr.push('&amp;');
      
    } else {
      arr.push(formData[i]);
    }
  }
  
  Альтернатива
  function htmlspecialchars(formData) {
  return formData.replace(/&/g, "&amp;")
                 .replace(/"/g, "&quot;")
                 .replace(/</g, "&lt;")
                 .replace(/>/g, "&gt;");
}
return arr.join('');
}

67
Вернуть только числа из массива
function filter_list(l) {
  return l.filter(x => typeof x === 'number');
}

68
Кварталы/месяцы
const quarterOf = (month) => {
 if (month > 0 && month <= 3) {
   return 1;
 }
  else if (month > 3 && month <= 6) {
   return 2;
 }
  else if (month > 6 && month <= 9) {
   return 3;
 }
  else if (month > 9 && month <= 12) {
   return 4;
 }
  
}

69
Факторы основания
function checkForFactor (base, factor) {
  if (base % factor == 0) {
     return true
  }
  else {
    return false;
    
 70
 function goals (laLigaGoals, copaDelReyGoals, championsLeagueGoals) {
  return (laLigaGoals + copaDelReyGoals + championsLeagueGoals);
}

71
Воды в час, округление до наименьшего целого
function litres(time) {
  return Math.floor(time * 0.5);
}
  }
}

72
Оценки
function finalGrade (exam, projects) {
 if (exam > 90 || projects > 10) {
   return 100;
 }
  else if (exam > 75 && projects > 4) {
   return 90;
 }
  else if (exam > 50 && projects > 1) {
   return 75;
 }
  else {
    return 0;
  }
  
  73
  Каждое слово с большой буквы
String.prototype.toJadenCase = function() {
    return this.split(" ").map((word) => {
        return word[0].toUpperCase() + word.slice(1);
    }).join(" ");
};

74
Заглавные в строчные и наоборот
String.prototype.toAlternatingCase = function () {
   const reg = /[A-Z]/;
  let result = '';
  
  for(let i = 0; i < this.length; i += 1) {
    if(reg.test(this[i])) {
      result += this[i].toLowerCase();
    } else {
      result += this[i].toUpperCase();
    }
  }
  
  return result
}

75
Добавить после каждого слова пробел
function smash (words) {
    return words.join(" "); 
}

76
Массив от а до б
function between(a, b) {
 let arr = []
  for(let i=a; i<=b; i++){
    arr.push(i)
  }
  return arr
}

77
Количество нечетных чисел
function rowSumOddNumbers(n) {
  return n*n*n;
}

