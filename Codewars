1
var input = "javascript is awesome";
var output = "";
for (var i = 0;i< input.length;i++){if(input[i]==="a") {output+="4"}
else if(input[i]==="e") {output+="3"}
else if(input[i]==="i") {output+="1"}
else if(input[i]==="o") {output+="0"}
else{output += input[i]}}
console.log(output);

2
function greet(name){
  return ("Hello, " + name + " how are you doing today?");
}

3
function boolToWord( bool ){
if (bool) {
  return "Yes";
    }
  return "No";
}

4
function correctTail(body, tail){

  sub = body.substr(body.length-tail.length)

  if (sub === tail)  return true;

  else return false;
  }
  
  5
  Повторить строку несколько раз
  
  function repeatStr (n, s) {
  return s.repeat(n);
}

6
Перевод положительных чисел в отрицательные
function makeNegative(num) {
  return -Math.abs(num);
}

7
String.prototype.isUpperCase = function() {
  return String(this) === this.toUpperCase();
}

8
Убрать пробелы из строки
function noSpace(x) {
    let newStr = ''
    for(let i = 0; i < x.length; i++) {
        if(x[i] !== " "){
            newStr += x[i]
        }
    }
    return newStr
}

9
Перевести строку в верхний регистр
function makeUpperCase(str) {
  return str.toUpperCase ();
}

10
Четные/нечетные
function simpleMultiplication(number) {
     var num = number;
     if(Math.floor(num / 2) == num / 2) {
         //Чётное
         return number * 8;
     }else{
         //Нечётное
         return number * 9;
     }
}

11
function greet () {
  return ("hello world!")
}
greet()

12
function booleanToString(b){
 if(b){
        return "true";
    }else {
        return "false";
    }
}

13
Только числа
function validatePIN(pin) {
  const aPin = pin.replace(/\D/g, '');
  
  return aPin === pin && (pin.length === 4 || pin.length === 6);
}

14
function lovefunc(flower1, flower2){
    return flower1 % 2 !== flower2 % 2;
}

15
function isTriangle(a,b,c)
{
if ((a + b <= c) || (a + c <= b) || (b + c <= a)) {
    return false;
  } 
  else {
    if ((a <= 0) || (b <= 0) || (c <= 0)) {
    return false;
    } 
    else {
    return true;
    } 
  } 
}

16
function positiveSum(arr) {
 var sum = 0;
 for(var i = 0; i < arr.length; i++) {
   if(arr[i] > 0) {
    sum += arr[i];
  }
 }
return sum;
}

17
Функция выполняет 4 мат.операции
function basicOp(operation, value1, value2) {
let answer = "";
  switch (operation) {
  case "+":
  return value1 + value2;
  case "-":
  return value1 - value2;
  case "*":
  return value1 * value2;
  case "/":
  return value1 / value2;
  return answer;
      }
}

18
Строка в обратном порядке
function solution(str){
  const reverseStr = str.split('').reverse('').join('');
  return reverseStr;
}

19
Преобразование суммы в двоичный код
function addBinary(a,b) {
  return (a+b).toString(2)
}

20
Время в миллисекундах
function past(h, m, s){
  const convertHours = h * 60 * 60 * 1000;
const convertMinutes = m * 60 * 1000;
const convertSeconds = s * 1000;
return convertHours + convertMinutes + convertSeconds;
}

21
Среднее арифметическое и сравнение
function betterThanAverage(classPoints, yourPoints) {
  return classPoints.reduce((a, b) => a + b) / classPoints.length < yourPoints;

}

22
Умножение всех чисел в массиве
function grow(x){
let result = 1;
      for(var i = 0; i<x.length; i++){
        result *= x[i];
      }
      return result;
}

23
Числа в обратном порядке
function digitize(n) {
    return String(n).split('').map(Number).reverse();
}

24
function getMiddle(s) {
  const newArr = s.split(""); 
  let middle;
    if(newArr.length % 2 === 0){
      middle = newArr[(newArr.length / 2)- 1]  + newArr[(newArr.length / 2)];
    } else {
        middle = newArr[Math.floor(newArr.length / 2)];
    }
  return middle;
}

25
Удаление первого и последнего элемента в строке/массиве
function removeChar(str){
return str.slice(1, -1);
};

26
Преобразование строки в массив слов
function stringToArray(string){
return string.split(' ');
}

27
Возвести в квадрат числа и сложить результаты
function squareSum(numbers){
 			var sum=0;
 			for(var i=0;i<numbers.length;i++){
 				sum += Math.pow(numbers[i],2);
 			}
 			return sum;
		}
    
28
Обратные слова
function reverseWords(str) {
  return str.split(' ').map(e => e.split('').reverse().join('')).join(' ')
}

29
Подсчитать количество объектов true в масиве
function countSheeps(arrayOfSheep) {
  let sum = 0;
 			for(let i=0;i < arrayOfSheep.length; i++) {
 				if(arrayOfSheep[i]) sum += 1
 			}
 			return sum;
		}
    
30
function paperwork(n, m) {
  if (n > 0 && m > 0) {
    return n*m;
  }
  else {
    return 0;
  }
}

31
Создайте функцию, которая возвращает массив целых чисел от n до 1, где n>0.

Пример: n=5 --> [5,4,3,2,1]

const reverseSeq = n => { 
  if (n < 1) {
    return [];
  } else {
    const countArray = reverseSeq(n - 1);
    countArray.unshift(n);
    return countArray;
  }
};

32
Удалить все гласные из строки
function disemvowel(str) {
  const newStr = str.replace(/[aeiou]/gi, '');
  return newStr;
}

33
Поиск повторяющихся букв, если есть - false
function isIsogram(str){
   var i, j;
   str = str.toLowerCase();
   for(i = 0; i < str.length; ++i) {
     for(j = i + 1; j < str.length; ++j) {
       if(str[i] === str[j]) {
         return false;
       }
     }
   }
   return true;
}

34
Создайте функцию с двумя аргументами, которая будет возвращать массив первых (n) кратных (x).

Предположим, что и заданное число, и количество подсчетов будут положительными числами больше 0.

function countBy(x, n) {
  let z = [];
  for (i = 1; i <= n; ++i) {
    z.push(i * x);
  }
  return z;
}

35
function greet (name, owner) {
 if (name == owner) {
        return("Hello boss")
    }
    else {
        return("Hello guest")
    }
}

36
Совпадение элементов
function solution(str, ending){
  return str.slice(str.length - ending.length) === ending;
}

37
Проверить, есть ли элемент в массиве
function check(a,x){
  return a.includes(x);
};

38
Преобразование имени в инициалы
function abbrevName(name){
 return name.split(' ').map(i => i[0].toUpperCase()).join('.')
}


39
Проверка суммы на четное/нечетное
function oddOrEven(array) {
 let result = 1;  
  for(var i = 0; i<array.length; i++){
        result += array[i];
      }
 var num = result;    
if(Math.floor(num / 2) == num / 2) {
         //Чётное
         return "odd";
     }else{
         //Нечётное
         return "even";
     }
}

40
Четное/нечетное
function even_or_odd(number) {
     var num = number;
     if(Math.floor(num / 2) == num / 2) {
         //Чётное
         return "Even";
     }else{
         //Нечётное
         return "Odd";
     }
}

41
Написать функцию, которая возвращает сумму следующих рядов до n-го члена (параметра).
Ряд: 1 + 1/4 + 1/7 + 1/10 + 1/13 + 1/16 +...
Округлить до 2 знаков после запятой
function SeriesSum(n) {
   for (var s = 0, i = 0; i < n; i++) {
     s += 1 / (1 + i * 3)
   }
   return s.toFixed(2)
 }

42
Возвращает массив, где первый элемент — это количество положительных чисел, 
а второй элемент — сумма отрицательных чисел. 0 не является ни положительным, ни отрицательным.
function countPositivesSumNegatives(input) {
    let positiveNums = 0;
    let negativeNums = 0;
    if (input === null || input.length === 0) {
      return [];
    } else {
      input.forEach((num) => num > 0 ? positiveNums++ : negativeNums += num);
    }
    return [positiveNums , negativeNums];
}

43
Преобразование строки в число
const stringToNumber = function(str){
return parseInt(str);
}

44
Учитывая массив единиц и нулей, преобразуйте эквивалентное двоичное значение в целое число.
Например: [0, 0, 0, 1] обрабатывается как 0001, что является двоичным представлением 1.

const binaryArrayToNumber = arr => {
   return parseInt(arr.join(''), 2);
};

45
function multiply(a,b){

      return (a*b);
}

46
function doubleInteger(i) {
  return (i*2);
}

47
Убрать восклицательные знаки из строки
function removeExclamationMarks(s) {
  let newStr = ''
    for(let i = 0; i < s.length; i++) {
        if(s[i] !== "!"){
            newStr += s[i]
        }
    }
    return newStr
}

48
Вернуть имя/фамилию в обратном порядке
function nameShuffler(str){
return str.split (" ").reverse().join(" ");
  }

49
Оценки
function getGrade (s1, s2, s3) {
let sum = ((s1 + s2 +s3)/3);
  if (sum >= 90) {
    return "A"; 
  } else if (sum >= 80 && sum < 90) {
    return "B";
  }
 else if (sum >= 70 && sum < 80) {
    return "C";
  }
  else if (sum >= 60 && sum < 70) {
    return "D";
  }
  else {
    return "F";
    
  Альтернатива
  function getGrade (s1, s2, s3) {
  var score = (s1 + s2 + s3) / 3;
  if (score >= 90 && score <= 100) {
      return 'A';
  } else if (score >= 80 ) {
    return 'B';
  } else if (score >= 70 ) {
    return 'C';
  } else if (score >= 60) {
    return 'D';
  } else{
    return 'F';
  }
}
  }

50
Камень-ножницы-бумага
const rps = (p1, p2) => {
  if (p1 === p2) return "Draw!";
  var rules = {rock: "scissors", paper: "rock", scissors: "paper"};
  if (p2 === rules[p1]) {
    return "Player 1 won!";
  }
  else {
    return "Player 2 won!";
  }
};

51
function setAlarm(employed, vacation){
return employed && !vacation;
}

52
Удвоить все элементы в строке
function doubleChar(str) {
return [...str].map(s => s.repeat(2)).join('')
}

53
function twiceAsOld(dadYearsOld, sonYearsOld) {
 return Math.abs(dadYearsOld - 2*sonYearsOld);
}

54
Отрицательные в положительные/положительные в отрицательные
function invert(array) {
   if (array.length === 0) return [];
   for (let i = 0; i < array.length; i++) {
     array[i] = -array[i];
   }
   return array;
}

55
Преобразовать число в строку
function numberToString(num) {
 return String(num);
}

56
Противоположные числа
function opposite(number) {
 return number *= -1;
}

57
Из 16-ричной в 10-чную
function hexToDec(hexString){
return  parseInt(hexString, 16);
}

58
Обратный порядок
function fixTheMeerkat(arr) {
  return arr.reverse();
}

59
Преобразовать строки в числа и узнать их сумму
function sumMix(x){
let result = 0;
     for (let n of x) {
    result += parseInt(n);
  }
  return result;
  }

60
Любит/не любит
function howMuchILoveYou(nbPetals) {
    let yyy = ["I love you", "a little", "a lot", "passionately", "madly", "not at all" ];
    for (let i = 0; i <= nbPetals-1; i += 1) {
    
    if (i === nbPetals-1) {
      return yyy[i%6];
    }
}
}

61
Удвоить каждое число в массиве
function maps(x){
 return x.map(el => el * 2);
  }

62
Создайте функцию, которая проверяет, делится ли число n на два числа x И y. Все входы являются строго положительными числами.
function isDivisible(n, x, y) {
  if (n%x == 0 && n%y == 0)  {
    return true;
  }
  else {
    return false;
  }
}

63
Прайс без умножения, накопление суммы за каждый символ
function billboard(name, price = 30){
  let result = 0;
  for (let i = 0; i < name.length; i++) {
     result += price;
      }
      return result;
} 

64
Выдает массив кратных чисел
Завершите функцию, которая принимает два аргумента и возвращает все числа, которые делятся на заданный делитель. Первый аргумент — это массив чисел, а второй — делитель.
function divisibleBy(numbers, divisor){
let mas = [];
  for (let i = 0; i < numbers.length; i++) {
    if (numbers[i] % divisor === 0) {
      mas.push(numbers[i]);
    
  }
    }
    return mas;
}

65
Вам будет предоставлен список строк. Вы должны отсортировать его в алфавитном порядке (с учетом регистра и на основе значений символов ASCII), а затем вернуть первое значение.

Возвращаемое значение должно быть строкой и иметь «***» между каждой буквой.
function twoSort(s) {
  return s.sort()[0].split('').join('***')
}

66
Замена символов
function htmlspecialchars(formData) {
let arr = [];
  for (let i = 0; i < formData.length; i++){
    if (formData[i] == '<'){
      arr.push('&lt;');
      
    } else if(formData[i] == '>'){
      arr.push('&gt;');
      
    } else if(formData[i] == '"'){
      arr.push('&quot;');
      
    } else if(formData[i] == '&'){
      arr.push('&amp;');
      
    } else {
      arr.push(formData[i]);
    }
  }
  
  Альтернатива
  function htmlspecialchars(formData) {
  return formData.replace(/&/g, "&amp;")
                 .replace(/"/g, "&quot;")
                 .replace(/</g, "&lt;")
                 .replace(/>/g, "&gt;");
}
return arr.join('');
}

67
Вернуть только числа из массива
function filter_list(l) {
  return l.filter(x => typeof x === 'number');
}

68
Кварталы/месяцы
const quarterOf = (month) => {
 if (month > 0 && month <= 3) {
   return 1;
 }
  else if (month > 3 && month <= 6) {
   return 2;
 }
  else if (month > 6 && month <= 9) {
   return 3;
 }
  else if (month > 9 && month <= 12) {
   return 4;
 }
  
}

69
Факторы основания
function checkForFactor (base, factor) {
  if (base % factor == 0) {
     return true
  }
  else {
    return false;
    
 70
 function goals (laLigaGoals, copaDelReyGoals, championsLeagueGoals) {
  return (laLigaGoals + copaDelReyGoals + championsLeagueGoals);
}

71
Воды в час, округление до наименьшего целого
function litres(time) {
  return Math.floor(time * 0.5);
}
  }
}

72
Оценки
function finalGrade (exam, projects) {
 if (exam > 90 || projects > 10) {
   return 100;
 }
  else if (exam > 75 && projects > 4) {
   return 90;
 }
  else if (exam > 50 && projects > 1) {
   return 75;
 }
  else {
    return 0;
  }
  
  73
  Каждое слово с большой буквы
String.prototype.toJadenCase = function() {
    return this.split(" ").map((word) => {
        return word[0].toUpperCase() + word.slice(1);
    }).join(" ");
};

74
Заглавные в строчные и наоборот
String.prototype.toAlternatingCase = function () {
   const reg = /[A-Z]/;
  let result = '';
  
  for(let i = 0; i < this.length; i += 1) {
    if(reg.test(this[i])) {
      result += this[i].toLowerCase();
    } else {
      result += this[i].toUpperCase();
    }
  }
  
  return result
}

75
Добавить после каждого слова пробел
function smash (words) {
    return words.join(" "); 
}

76
Массив от а до б
function between(a, b) {
 let arr = []
  for(let i=a; i<=b; i++){
    arr.push(i)
  }
  return arr
}

77
Количество нечетных чисел
function rowSumOddNumbers(n) {
  return n*n*n;
}

78
Вернуть длину кратчайшего слова в массиве
function findShort(s){
 var arr = s.split(' ');
  var small = arr[0];
  for (var i = 0; i < arr.length; i++) {
    if(arr[i].length < small.length){
      small = arr[i];
    }
  }
  return small.length;
}

79
Рандомное число
function getAge(inputString){

    return parseInt(inputString[Math.floor(Math.random())]);
  
}

80
Отсортировать слова в массиве от меньшего к большему
function sortByLength (array) {
return array.sort((a,b) => a.length - b.length); 
};

81
function enough(cap, on, wait) {
  if (on + wait <= cap) {
    return 0;
  }
   if (on + wait > cap) {
    return ((on + wait) - cap);
  }
}

82
Сумма всех чисел в массиве от1 до num
var summation = function (num) {
   let sum = 0
    for (let i = 0; i <= num; i++) {
        sum += i
    }
    return sum
}

83
Вернуть массив строк без повторяшек
function gooseFilter (birds) {
  var geese = ["African", "Roman Tufted", "Toulouse", "Pilgrim", "Steinbacher"];
  return birds.filter( bird => !geese.includes(bird));
};

84
Площадь/периметр
const areaOrPerimeter = function(l , w) {
  if (l == w) {
    return l * w;
  }
  else {
    return l*2 + w*2;
  }
};

Сокращенный вариант
const areaOrPerimeter = function(l , w) {
  return l == w ? l*w : 2*(l + w)
};

85
Обратиться к первой букве
function areYouPlayingBanjo(name) {
if (name[0].toLowerCase() === "r" ) {
  return name + " plays banjo";
}
  else {
   return name + " does not play banjo"; 
  }
  
}

86
Отсортировать массив чисел. Сложить наименьшие
function sumTwoSmallestNumbers(numbers) {  
  let arr = numbers.sort((a, b) => a - b);
  return arr[0] + arr[1];
}

87
Результат: accum("abcd") -> "A-Bb-Ccc-Dddd"

function accum(s) {
	 const result = []
  const lowerStr = s.toLowerCase()

  for(let i = 0; i < lowerStr.length; i++) {
    let str = lowerStr[i].toUpperCase()
    for(let j = 0; j < i; j++) {
      str += lowerStr[i]
    }
    result.push(str)
  }

  return result.join("-")
}

88
Возведение в степень (**) иначе: Math.pow (weight/Math.pow(height,2) )
function bmi(weight, height) {
 let arr = (weight / (height ** 2));
  if (arr < 18.5) {
    return "Underweight";
  }
  else if (arr < 25.0) {
    return "Normal";
  }
  else if (arr < 30.0) {
    return "Overweight";
  }
  else {
    return "Obese";
  }
}

89
Наименьшее число
class SmallestIntegerFinder {
  findSmallestInt(args) {
let arr = args.sort((a, b) => a - b);
  return arr[0];
  }
}

90
Сумма углов треугольника
function otherAngle(a, b) {
  return 180 - (a + b);
}

91
function sayHello(name) {
  return 'Hello, ' + name;
}

92
Подсчет кол-ва гласных
function getCount(str) {
    return (str.match(/[aeiou]/ig)||[]).length
}

93
function hoopCount (n) {
   if (n >= 10) {
     return "Great, now move on to tricks";
   }
  else {
    return "Keep at it until you get it";
  }
}

94
Найти слово в массиве и вывести его индекс
function findNeedle(haystack) {
 for (let i=0; i<haystack.length; i++) {
      if (haystack[i] == "needle")
        return "found the needle at position "+i;
    }
}

Др. способ
function findNeedle(haystack) {
  return "found the needle at position " + haystack.indexOf("needle");
}

95
function helloWorld() {
  let str ="Hello World!";
  console.log(str)
}

96
Палиндром
function isPalindrome(x) {
   x = x.toLowerCase();
  return (x === x.split('').reverse().join(''))
}

97
Квадрат числа
function square (x) {
  return x**2;
}

98
var laLigaGoals = 43;
var championsLeagueGoals = 10;
var copaDelReyGoals = 5;

var totalGoals = (laLigaGoals + championsLeagueGoals + copaDelReyGoals);

99
Пули и драконы
function hero(bullets, dragons) {
if (dragons * 2 <= bullets) {
  return true;
}
  else {
    return false;
  }
}

100
function testEven(n) {
       var num = n;
     if(Math.floor(num / 2) == num / 2) {
         //Чётное
         return true;
     }else{
         //Нечётное
         return false;
     }
}

101
Сумма без наименьшего и наибольшего
function sumArray(array) {
 if(array) {
    array.sort((a, b) => {return a - b});
    let sum = 0;
    for(var i = 1; i < array.length - 1; i++){
      sum += array[i];
    }
    return sum;
  } 
  return 0;
}

102
Сопоставить первый и последний символ
function feast(beast, dish) {
if (beast[0] == dish[0] && beast.slice(-1) == dish.slice(-1)) {
  return true;
}
  else {
    return false;
  }
}

103
Перемножить элементы массива и выполнить вычитание из большего
function findDifference(a, b) {
  a = (a[0] * a[1] * a[2]);
  b = (b[0] * b[1] * b[2]);
  if (a >= b) {
    return a - b;
  }
  if (b >= a) {
    return b - a;
  }
}

Другой вариант
function find_difference(a, b) {
  return Math.abs(a[0]*a[1]*a[2]-b[0]*b[1]*b[2]);
}

104
function rentalCarCost(d) {
  if (d >= 3 && d < 7) {
    return (d * 40 - 20);
  }
  else if (d >= 7) {
    return (d * 40 - 50);
  }
  else {
    return (d * 40);
  }
}

105
Заменить некоторые числа на буквы
function correct(string) {
	return string.replace(/[5]/g, 'S').replace(/[0]/g, 'O').replace(/[1]/g, 'I');
}

106
Строки в числа, сумма и обратно в строку
function sumStr(a,b) {
  return String(Number(a)+Number(b));
}

107
Массив в обратном порядке
function reverseList(list) {
return list.reverse();
}

108
Отсортировать массив чисел по порядку
function solution(nums){
  if (nums == [] || nums == null) {
    return [];
  }
 let arr = nums.sort((a, b) => a - b);
  return arr;
}

109
Массив от 0 до N
const arr = N => {
  const arr = [];
  for (let i = 0; i < N; i++)
    arr.push(i);
  return arr;
};

110
const zeroFuel = (distanceToPump, mpg, fuelLeft) => {
  if (mpg * fuelLeft >= distanceToPump) {
    return true;
  }
  else {
    return false;
  }
};


111
Найти отличающееся число в массиве
function stray(numbers) {
  let strayNum = numbers[0];
if (strayNum !== numbers[1] && strayNum !== numbers[2]) {
  return strayNum;
}
  for (let i = 1; i < numbers.length; i++) {
    if (strayNum !== numbers[i]) {
      return numbers[i];
    }
  }
}


112
Вызвать число без использования цифр
function unusualFive() {
  return ("Hello".length);
}


113
Возвести каждую цифру в квадрат
function squareDigits(num){
  var res = "";
  num = num.toString();
  for (var i = 0; i < num.length; i++) {
    res = res + (num[i] ** 2).toString();
  }
  return Number(res);
}

114
Вернуть массив слов с 4 буквами
function friend(friends) {
  let realFr = [];
  for (let i = 0; i < friends.length; i++) {
    if (friends[i].length == 4) {
     realFr.push(friends[i]);
    }
  }
  return realFr;
}

115
Приветствие на разных языках
function greet(language) {
  let lang = {
english: 'Welcome',
czech: 'Vitejte',
danish: 'Velkomst',
dutch: 'Welkom',
estonian: 'Tere tulemast',
finnish: 'Tervetuloa',
flemish: 'Welgekomen',
french: 'Bienvenue',
german: 'Willkommen',
irish: 'Failte',
italian: 'Benvenuto',
latvian: 'Gaidits',
lithuanian: 'Laukiamas',
polish: 'Witamy',
spanish: 'Bienvenido',
swedish: 'Valkommen',
welsh: 'Croeso'
  }
return lang[language] || lang["english"];
 }   

116
Выделить наибольшее и наименьшее число из массива
function minMax(arr){
let mas = [];
let max = arr[0];
let min = arr[0];
  for (let i = 1; i < arr.length; i++) {
    if (arr[i] < min) {
      min = arr[i];
    }
    if (arr[i] > max) {
      max = arr[i];
    }
  }
mas.push(min);
mas.push(max);
  return mas;
  }

117
Числа меньше или равные лимиту
function smallEnough(a, limit){
  for (let i = 0; i<a.length; i++) {
    if (a[i] > limit) {
      return false;
    }
    else if (i == a.length-1) {
      return true;
    }
  }
}

118
Выдвет век
function century(year) {
  return Math.floor((year + 99)/100);
}

119
function plural(n) {
return n != 1
}

120
Удалить знак в конце строки
function remove (string) {
return string.replace(/!$/,'');
}

121
Удалить каждый второй элемент масисва
function removeEveryOther(arr){
  return arr.filter((a,i) => i%2 == 0);
}

122
function index(array, n){
  if (array.length - 1 < n) {
    return -1;
  }
  return (array[n] ** n);
}

123
function addFive(num) {
  var total = num + 5
  return total;
}

124
function combat(health, damage) {
  if (damage > health) {
    return 0;
  }
  else return health - damage;
}
125
Заменить один символ на другой
function DNAtoRNA(dna) {
  return dna.replace(/T/g,"U");
}

126
Обратный порядок слов ("Hello World" --> "World Hello")
function reverse(string){
  return string.split(' ').reverse('').join(" ");
}

127
Привести к одному регистру и сравнить
function mouthSize(animal) {
  if (animal.toLowerCase() === "alligator".toLowerCase()) {
    return "small"
}else return "wide"
}

128
function arithmetic(a, b, operator){
  if (operator === "add") {
    return a+b
  }
   if (operator === "subtract") {
    return a-b
  }
   if (operator === "multiply") {
    return a*b
  }
   if (operator === "divide") {
    return a/b
  }
}

Через тернарники
const arithmetic = (a, b, operator) => {
 return  ( 
   operator === "add" ? a + b : operator === "subtract" ? a - b : operator === "multiply" ? a * b : a / b
 )
}

129
Если строка, вернуть ошибку.
function problem(x){
  if (typeof x === 'string') {
    return "Error"
  }
 else {
   return (x * 50 + 6)
}
  }

130
Приветсвие + первая буква заглавная
function hello(name) {
  return name
    ? `Hello, ${name[0].toUpperCase() + name.toLowerCase().slice(1)}!`
    : `Hello, World!`;
}

131
Удалить все после опреденного символа
function removeUrlAnchor(url){
  return url.split("\#")[0]
}

132
function getLength(arr){
  //return length of arr
  return arr.length
}
function getFirst(arr){
  //return the first element of arr
  return arr[0]
}
function getLast(arr){
  //return the last element of arr
  return arr[arr.length-1]
}
function pushElement(arr){
  var el=1;
  //push el to arr
   arr.push(el)
  return arr
}
function popElement(arr){
 arr.pop()
  
  return arr
}

133
Вернуть количество целых делителей
function getDivisorsCnt(n){
  let counter = 0;
    for(i=1; i<=n; i++) {
      if(n%i == 0) {
         counter++
         }
    }
  return counter
}

134
Получив строку str, переверните ее и опустите все неалфавитные символы.
function reverseLetter(str) {
return str.split("").reverse().join("").replace(/[^A-Za-z]/g, "")
}

135
["а", "б", "в"] --> ["1: а", "2: б", "3: в"]

 var number = function (array) {
    if (array.length == 0) {
      return [];
    }else{
      return array.map(function (item, idx) {
        return (idx + 1) + ": " + item;
      });
    }
  }

136
Массив от 1 до n
function preFizz(n) {
  let arr = []
  for(let i=1; i<=n; i++){
    arr.push(i)
  }
  return arr
}

137
Вернуть сумму чисел от одного числа до другова
function getSum( a,b ) {
 if (a === b) {
   return a
 }
  else if (a < b) {
    return a + getSum(a+1, b)
  }
  else return a + getSum(a-1, b)
}

138

Учитывая строку цифр, вы должны заменить любую цифру ниже 5 на «0», а любую цифру 5 и выше на «1». Верните полученную строку.
function fakeBin(x){
   let res = '';
   for(let i = 0; i < x.length; i++){
      const el = +x[i];
      if(el < 5){
         res += 0;
      }else{
         res += 1;
      };
   };
   return res;
}

//Другое решение
function fakeBin(x) {
    return x.split('').map(n => n < 5 ? 0 : 1).join('');
}

139
function rainAmount(mm){
    if (mm < 40) {
         return `You need to give your plant ${40 - mm}mm of water`;
    }
    else {
         return "Your plant has had more than enough water for today!";
    }
}

140
function saleHotdogs(n){
  return n < 5 ? n*100 : n >= 5 & n < 10 ? n*95 : n*90
}

141
function peopleWithAgeDrink(old) {
  return (old < 14 ? 'drink toddy' : old >= 14 && old < 18 ? 'drink coke' : old >= 18 && old < 21 ? 'drink beer' : 'drink whisky')
};

142
function  calculateAge(yearBorn, year) { 
if (year > yearBorn && year - yearBorn === 1) {
  return `You are ${year - yearBorn} year old.`
}
if (year > yearBorn) {
  return `You are ${year - yearBorn} years old.`
}
if (year < yearBorn && yearBorn - year === 1) {
  return `You will be born in ${yearBorn - year} year.`
}
 if (year < yearBorn) {
   return `You will be born in ${yearBorn - year} years.`
 }
  if (year === yearBorn) {
    return "You were born this very year!"
  }
}

143
Анаграмма
var isAnagram = function(test, original) {
return (test.toLowerCase().split('')
        .sort().join('') === original.toLowerCase()
        .split('').sort().join(''))
};

144
function xor(a, b) {
return a != b
}

145
Сумма цифр, входящих в число
let arr = Math.abs(number).toString().split('')
  let sum = 0;
  for(let i = 0; i < arr.length; i++)
    sum += +arr[i]
  return sum;

146
Вернуть указанное количество элементов массива
function take(arr, n) {
  return arr.slice(0, n)
}

147
Метры в секунду/километры в час
function cockroachSpeed(s) {
  return Math.floor(s * 100000/3600)
}

148
function findMultiples(integer, limit) {
let arr = []
  for(let i=integer; i<=limit; i++){
    if(i%integer === 0) {
      arr.push(i)
    }
  }
  return arr
}

149
Степени от 0 до n
function powersOfTwo(n){
  let arr = []
  for (let i = 0; i<=n; i++)
    arr[i] = 2**i
  return arr
}

150
function updateLight(current) {
  return (current == "green" ? "yellow" : current ==  "yellow" ? "red" : "green")
}

151
function chromosomeCheck(sperm) {
  return sperm == "XX" ? "Congratulations! You're going to have a daughter." : "Congratulations! You're going to have a son."
}

152
function firstNonConsecutive (arr) {
  for (let i = 0; i<arr.length - 1; i++) {
    if(arr[i]+1 !== arr[i+1]) {
     return arr[i+1]
   } 
     
   }
    return null
  }

153
function addLength(str) {
  return str.split(' ').map (el => el + ' ' + el.length)
}

154
Вернуть строку, изменить разделитель между словами
function sayHello( name, city, state ) {
  return (`Hello, ${name.join(' ')}! Welcome to ${city}, ${state}!`)
}

155
Вернуть следующий целочисленный квадрат числа
function findNextSquare(sq) {
  for(let i=0;i>-1;i++){
				let square = i*i;
        		if(square === sq){
        			return (i+1)*(i+1);
        		}else if(square>sq){
        			return -1;
        		} 
			}
 		}
156
Взять индекс среднего числа
function gimme (triplet) {
return triplet.indexOf(triplet.slice(0).sort(function(a,b) { return a-b; })[1]);
}

157
function animal(obj){
  return `This ${obj.color} ${obj.name} has ${obj.legs} legs.`
}

158
Перевод из двоичной в десятичную
function binToDec(bin){
   return parseInt(bin, 2)
}

159
Найти сумму наибольших числен в массиве
function largestPairSum (numbers) {
 numbers.sort((a, b) => b-a)
  return numbers[0] + numbers[1]
}

160
Узнать, есть ли элемент в массиве
function include(arr, item){
  for(let i = 0; i<arr.length; i++) {
    if(arr[i] === item) {
      return true
    }
  }
 return false
}

161
Найти конретное слово в строке
function spEng(sentence){
let str = sentence.toLowerCase()
 return str.includes("english")
}

162
Заменить одни символы на другие
function DNAStrand(dna) {
    return dna.replace(/./g, function (c) {
        return DNAStrand.pairs[c];
    });
}

DNAStrand.pairs = {
    A: 'T',
    T: 'A',
    C: 'G',
    G: 'C',
};

163
Чтобы в массиве числа шли последовательно
function pipeFix(numbers){
 let result = [];
  for(let i=numbers[0]; i <=numbers[numbers.length-1]; i++){
    result.push(i);
  }
  return result;
}

164
function usdcny(usd) {
  return (`${(usd * 6.75).toFixed(2)} Chinese Yuan`)
}

165
Найти число чаще всего встречающееся в массиве
const mostFrequent = (array) => {
 return array.sort((a,b) => 
      array.filter(v => v===a).length - array.filter(v => v===b).length
   ).pop();
}
console.log(mostFrequent([3, 'c', 'c', 'c', 2, 3, 'c', 3, 'c', 2, 4, 9, 3]));

166
Функция для поиска и удаления повторяющихся значений в массиве. Функция должна возвращать массив повторяющихся значений.
function removeDuplicates(array){
 let dist = [];
  for (let i = 0; i < array.length; i++) {
    let e = array[i];
    if (dist.indexOf(e) === -1) 
      dist.push(e);
  } 
  return dist;
}

167
Функция, кот. возвращает первое самое короткое слово
const func = (str) => {
  return str.split(' ').sort((a, b) => a.length - b.lenght)[0]
  }

177
Создать функцию, кот. возвращает инициалы
const func = (str) => {
 let name = str.split(' ')[0]
 let secName = str.split(' ')[1]
 
 return (name.split('')[0] + '. ' + secName.split('')[0] + '.').toUpperCase()
  }

178
Найти сумму элементов числа
const func = (num) => {
  return Math.abs(num).toString().split('').reduce((a, b) => + a + +b, 0)
}

console.log(func(99))

179
Вернуть наименьшее и наибольшее число массива
const func = (arr) => {
  let mas = []
  let per= arr.sort((a, b) => a-b)
    mas.push(per[0])
  let sec = arr.sort((a, b) => b-a)
  mas.push(sec[0])
  return mas
}

console.log(func([1, 5, 8, 29, 4, 3]))

180
A Bb Ccc etc.
const func = (str) => {
  return str.toUpperCase().split('').map((el, i)=> `${el}${el.repeat(i).toLowerCase()}`).join('-')
}

console.log(func('abcDa'))

181
Вернуть индексы заглавных букв
const func = (str) => {
  let big = str.toUpperCase().split('')
  let small = str.split('')
  let res = []
  for(let i = 0; i < str.length; i++) {
    if(small[i] === big[i]) {
      res.push(i)
    }
  }
  return res
}

console.log(func('ffFjjkLd'))
